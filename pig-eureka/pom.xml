<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~  Copyright (c) 2019-2020, 冷冷 (wangiegie@gmail.com).
  ~  <p>
  ~  Licensed under the GNU Lesser General Public License 3.0 (the "License");
  ~  you may not use this file except in compliance with the License.
  ~  You may obtain a copy of the License at
  ~  <p>
  ~ https://www.gnu.org/licenses/lgpl.html
  ~  <p>
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.pig4cloud</groupId>
		<artifactId>pig</artifactId>
		<version>2.4.0</version>
	</parent>

	<artifactId>pig-eureka</artifactId>

	<description>pig 服务中心，基于eureka</description>

	<dependencies>
		<!--服务中心-->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
		</dependency>
		<!--security-->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-security</artifactId>
		</dependency>
		<!--配置中心客户端-->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency>
		<!--web 模块-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<!--排除tomcat依赖-->
				<exclusion>
					<artifactId>spring-boot-starter-tomcat</artifactId>
					<groupId>org.springframework.boot</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<!--undertow容器-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-undertow</artifactId>
		</dependency>
	</dependencies>

	<!-- do not modify this docker build config, unless you know it! -->
	<!-- === docker build copy BEGIN === -->
	<properties>
		<JunFengDockerImageName>pig-eureka</JunFengDockerImageName>
		<JunFengDockerImageVersion>0.0.3</JunFengDockerImageVersion>
	</properties>
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!-- docker的maven插件，官网 https://github.com/spotify/docker-maven-plugin -->
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>1.0.0</version>
				<configuration>
					<imageName>
						192.168.199.12:50000/${JunFengDockerImageName}:${JunFengDockerImageVersion}
					</imageName>
					<baseImage>jre1.8:0.0.1</baseImage>
					<workdir>/${project.build.finalName}</workdir>
					<entryPoint>
						["java", "-Djava.security.egd=file:/dev/./urandom", "-jar","/${project.build.finalName}/${project.build.finalName}.jar"]
					</entryPoint>
					<resources>
						<resource>
							<targetPath>/${project.build.finalName}</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
					<dockerHost>http://192.168.199.12:2375</dockerHost>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<!-- === docker build copy END === -->

</project>
